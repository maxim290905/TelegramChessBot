# backend/elo.py

def calculate_elo(winner_elo, loser_elo, k=32, draw=False):
    """
    Рассчитывает новые рейтинги Elo для победителя и проигравшего после матча.

    Система рейтингов Elo используется для вычисления относительных уровней навыков игроков в двух игроковых играх, таких как шахматы. 
    Эта функция вычисляет новые рейтинги Elo для победителя и проигравшего на основе их текущих рейтингов, результата матча 
    (победа, поражение или ничья) и коэффициента K, который определяет вес результата матча.

    Аргументы:
        winner_elo (float): Текущий рейтинг Elo победителя.
        loser_elo (float): Текущий рейтинг Elo проигравшего.
        k (int, необязательный): Коэффициент K, который определяет вес матча. По умолчанию равен 32.
        draw (bool, необязательный): Если True, результат считается ничьей. По умолчанию False.

    Возвращает:
        tuple: Кортеж, содержащий обновленные рейтинги Elo для победителя и проигравшего (округленные до одного знака после запятой).
    
    Исключения:
        ValueError: Если "winner_elo" или "loser_elo" не являются действительными числовыми значениями.
        TypeError: Если какой-либо аргумент не соответствует ожидаемому типу.
    
    Примечания:
        - Если параметр "draw" установлен в True, оба игрока получают обновленные рейтинги на основе ничьей (по 0.5 очков каждому).
        - Если параметр "draw" установлен в False, победитель получает 1 очко, а проигравший — 0.
        - Формула для вычисления ожидаемого результата:  
            expected_score = 1 / (1 + 10 ^ ((рейтинг_оппонента - рейтинг_игрока) / 400))
    """
    expected_score_winner = 1 / (1 + 10 ** ((loser_elo - winner_elo) / 400))
    expected_score_loser = 1 / (1 + 10 ** ((winner_elo - loser_elo) / 400))

    if draw:
        winner_new_elo = winner_elo + k * (0.5 - expected_score_winner)
        loser_new_elo = loser_elo + k * (0.5 - expected_score_loser)
    else:
        winner_new_elo = winner_elo + k * (1 - expected_score_winner)
        loser_new_elo = loser_elo + k * (0 - expected_score_loser)

    return round(winner_new_elo, 1), round(loser_new_elo, 1)
